<!doctype html>
<head><meta charset="utf-8">
<link rel="stylesheet" href="ecmarkup.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css">
<script src="ecmarkup.js"></script>
<title>Trailing Commas in Function Param Lists</title><script type="application/json" id="menu-search-biblio">{"clauses":{"intro":{"location":"","id":"intro","aoid":null,"title":"Introduction","number":""},"modified-productions":{"location":"","id":"modified-productions","aoid":null,"title":"Modified Productions","number":"1"},"Arguments":{"location":"","id":"Arguments","aoid":null,"title":"|Arguments|","number":"1.1"},"arguments-runtime-semantics-argumentlistevaluation":{"location":"","id":"arguments-runtime-semantics-argumentlistevaluation","aoid":null,"title":"Runtime Semantics: ArgumentListEvaluation","number":"1.1.1"},"ArgumentList":{"location":"","id":"ArgumentList","aoid":null,"title":"|ArgumentList|","number":"1.2"},"argument-list-runtime-semantics-argumentlistevaluation":{"location":"","id":"argument-list-runtime-semantics-argumentlistevaluation","aoid":null,"title":"Runtime Semantics: ArgumentListEvaluation","number":"1.2.1"},"FormalParameters":{"location":"","id":"FormalParameters","aoid":null,"title":"|FormalParameters|","number":"1.3"},"formal-parameters-static-semantics-boundnames":{"location":"","id":"formal-parameters-static-semantics-boundnames","aoid":null,"title":"Static Semantics: BoundNames","number":"1.3.1"},"formal-parameters-static-semantics-containsexpression":{"location":"","id":"formal-parameters-static-semantics-containsexpression","aoid":null,"title":"Static Semantics: ContainsExpression","number":"1.3.2"},"formal-parameters-static-semantics-expectedargumentcount":{"location":"","id":"formal-parameters-static-semantics-expectedargumentcount","aoid":null,"title":"Static Semantics: ExpectedArgumentCount","number":"1.3.3"},"formal-parameters-static-semantics-issimpleparameterlist":{"location":"","id":"formal-parameters-static-semantics-issimpleparameterlist","aoid":null,"title":"Static Semantics: IsSimpleParameterList","number":"1.3.4"},"formal-parameters-runtime-semantics-iteratorbindinginitialization":{"location":"","id":"formal-parameters-runtime-semantics-iteratorbindinginitialization","aoid":null,"title":"Runtime Semantics: IteratorBindingInitialization","number":"1.3.5"},"FormalParameterList":{"location":"","id":"FormalParameterList","aoid":null,"title":"|FormalParameterList|","number":"1.4"},"FormalParameterList--static-semantics-boundnames":{"location":"","id":"FormalParameterList--static-semantics-boundnames","aoid":null,"title":"Static Semantics: BoundNames","number":"1.4.1"},"FormalParameterList--static-semantics-containsexpression":{"location":"","id":"FormalParameterList--static-semantics-containsexpression","aoid":null,"title":"Static Semantics: ContainsExpression","number":"1.4.2"},"FormalParameterList--static-semantics-expectedargumentcount":{"location":"","id":"FormalParameterList--static-semantics-expectedargumentcount","aoid":null,"title":"Static Semantics: ExpectedArgumentCount","number":"1.4.3"},"FormalParameterList--static-semantics-hasinitializer":{"location":"","id":"FormalParameterList--static-semantics-hasinitializer","aoid":null,"title":"Static Semantics: HasInitializer","number":"1.4.4"},"FormalParameterList--static-semantics-issimpleparameterlist":{"location":"","id":"FormalParameterList--static-semantics-issimpleparameterlist","aoid":null,"title":"Static Semantics: IsSimpleParameterList","number":"1.4.5"},"FormalParameterList--runtime-semantics-iteratorbindinginitialization":{"location":"","id":"FormalParameterList--runtime-semantics-iteratorbindinginitialization","aoid":null,"title":"Runtime Semantics: IteratorBindingInitialization","number":"1.4.6"},"FormalsList":{"location":"","id":"FormalsList","aoid":null,"title":"|FormalsList|","number":"1.5"},"FormalsList--static-semantics-boundnames":{"location":"","id":"FormalsList--static-semantics-boundnames","aoid":null,"title":"Static Semantics: BoundNames","number":"1.5.1"},"FormalsList--static-semantics-containsexpression":{"location":"","id":"FormalsList--static-semantics-containsexpression","aoid":null,"title":"Static Semantics: ContainsExpression","number":"1.5.2"},"FormalsList--static-semantics-expectedargumentcount":{"location":"","id":"FormalsList--static-semantics-expectedargumentcount","aoid":null,"title":"Static Semantics: ExpectedArgumentCount","number":"1.5.3"},"sec-copyright-and-software-license":{"location":"","id":"sec-copyright-and-software-license","aoid":null,"title":"Copyright & Software License","number":"A"}},"ops":{},"productions":{"prod-Arguments":{"id":"prod-Arguments","location":"","name":"Arguments"},"prod-ArgumentList":{"id":"prod-ArgumentList","location":"","name":"ArgumentList"},"prod-FormalParameters":{"id":"prod-FormalParameters","location":"","name":"FormalParameters"},"prod-FormalParameterList":{"id":"prod-FormalParameterList","location":"","name":"FormalParameterList"},"prod-FormalsList":{"id":"prod-FormalsList","location":"","name":"FormalsList"}},"terms":{},"examples":{},"notes":{},"tables":{},"figures":{}}</script></head><body><div id="menu-toggle">☰</div><div id="menu"><div id="menu-search"><input type="text" id="menu-search-box" placeholder="Search..."><div id="menu-search-results" class="inactive"></div></div><div id="menu-toc"><ol class="toc"><li><span class="item-toggle-none"></span><a href="#intro" title="Introduction"><span class="secnum"></span> Introduction</a></li><li><span class="item-toggle">◢</span><a href="#modified-productions" title="Modified Productions"><span class="secnum">1</span> Modified Productions</a><ol class="toc"><li><span class="item-toggle">◢</span><a href="#Arguments" title="|Arguments|"><span class="secnum">1.1</span> <emu-nt>Arguments</emu-nt></a><ol class="toc"><li><span class="item-toggle-none"></span><a href="#arguments-runtime-semantics-argumentlistevaluation" title="Runtime Semantics: ArgumentListEvaluation"><span class="secnum">1.1.1</span> RS: ArgumentListEvaluation</a></li></ol></li><li><span class="item-toggle">◢</span><a href="#ArgumentList" title="|ArgumentList|"><span class="secnum">1.2</span> <emu-nt>ArgumentList</emu-nt></a><ol class="toc"><li><span class="item-toggle-none"></span><a href="#argument-list-runtime-semantics-argumentlistevaluation" title="Runtime Semantics: ArgumentListEvaluation"><span class="secnum">1.2.1</span> RS: ArgumentListEvaluation</a></li></ol></li><li><span class="item-toggle">◢</span><a href="#FormalParameters" title="|FormalParameters|"><span class="secnum">1.3</span> <emu-nt>FormalParameters</emu-nt></a><ol class="toc"><li><span class="item-toggle-none"></span><a href="#formal-parameters-static-semantics-boundnames" title="Static Semantics: BoundNames"><span class="secnum">1.3.1</span> SS: BoundNames</a></li><li><span class="item-toggle-none"></span><a href="#formal-parameters-static-semantics-containsexpression" title="Static Semantics: ContainsExpression"><span class="secnum">1.3.2</span> SS: ContainsExpression</a></li><li><span class="item-toggle-none"></span><a href="#formal-parameters-static-semantics-expectedargumentcount" title="Static Semantics: ExpectedArgumentCount"><span class="secnum">1.3.3</span> SS: ExpectedArgumentCount</a></li><li><span class="item-toggle-none"></span><a href="#formal-parameters-static-semantics-issimpleparameterlist" title="Static Semantics: IsSimpleParameterList"><span class="secnum">1.3.4</span> SS: IsSimpleParameterList</a></li><li><span class="item-toggle-none"></span><a href="#formal-parameters-runtime-semantics-iteratorbindinginitialization" title="Runtime Semantics: IteratorBindingInitialization"><span class="secnum">1.3.5</span> RS: IteratorBindingInitialization</a></li></ol></li><li><span class="item-toggle">◢</span><a href="#FormalParameterList" title="|FormalParameterList|"><span class="secnum">1.4</span> <emu-nt>FormalParameterList</emu-nt></a><ol class="toc"><li><span class="item-toggle-none"></span><a href="#FormalParameterList--static-semantics-boundnames" title="Static Semantics: BoundNames"><span class="secnum">1.4.1</span> SS: BoundNames</a></li><li><span class="item-toggle-none"></span><a href="#FormalParameterList--static-semantics-containsexpression" title="Static Semantics: ContainsExpression"><span class="secnum">1.4.2</span> SS: ContainsExpression</a></li><li><span class="item-toggle-none"></span><a href="#FormalParameterList--static-semantics-expectedargumentcount" title="Static Semantics: ExpectedArgumentCount"><span class="secnum">1.4.3</span> SS: ExpectedArgumentCount</a></li><li><span class="item-toggle-none"></span><a href="#FormalParameterList--static-semantics-hasinitializer" title="Static Semantics: HasInitializer"><span class="secnum">1.4.4</span> SS: HasInitializer</a></li><li><span class="item-toggle-none"></span><a href="#FormalParameterList--static-semantics-issimpleparameterlist" title="Static Semantics: IsSimpleParameterList"><span class="secnum">1.4.5</span> SS: IsSimpleParameterList</a></li><li><span class="item-toggle-none"></span><a href="#FormalParameterList--runtime-semantics-iteratorbindinginitialization" title="Runtime Semantics: IteratorBindingInitialization"><span class="secnum">1.4.6</span> RS: IteratorBindingInitialization</a></li></ol></li><li><span class="item-toggle">◢</span><a href="#FormalsList" title="|FormalsList|"><span class="secnum">1.5</span> <emu-nt>FormalsList</emu-nt></a><ol class="toc"><li><span class="item-toggle-none"></span><a href="#FormalsList--static-semantics-boundnames" title="Static Semantics: BoundNames"><span class="secnum">1.5.1</span> SS: BoundNames</a></li><li><span class="item-toggle-none"></span><a href="#FormalsList--static-semantics-containsexpression" title="Static Semantics: ContainsExpression"><span class="secnum">1.5.2</span> SS: ContainsExpression</a></li><li><span class="item-toggle-none"></span><a href="#FormalsList--static-semantics-expectedargumentcount" title="Static Semantics: ExpectedArgumentCount"><span class="secnum">1.5.3</span> SS: ExpectedArgumentCount</a></li></ol></li></ol></li><li><span class="item-toggle-none"></span><a href="#sec-copyright-and-software-license" title="Copyright &amp; Software License"><span class="secnum">A</span> Copyright &amp; Software License</a></li></ol></div></div><h1 class="version">Stage 3 Draft / November 18, 2015</h1><h1 class="title">Trailing Commas in Function Param Lists</h1>

<emu-intro id="intro">
	<h1><span class="secnum"></span>Introduction<span class="utils"><span class="anchor"><a href="#intro">#</a></span></span></h1>
	<p>In some codebases/style guides, there are scenarios that arise where function calls and definitions are split across multiple lines in the style of:</p>

	<pre><code class="javascript hljs">
    <span class="hljs-number">1</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clownPuppiesEverywhere</span>(<span class="hljs-params">
    2:   param1,
    3:   param2
    4: </span>) </span>{ <span class="hljs-comment">/* ... */</span> }
    <span class="hljs-number">5</span>:  
    <span class="hljs-number">6</span>: clownPuppiesEverywhere(
    <span class="hljs-number">7</span>:   <span class="hljs-string">'foo'</span>,
    <span class="hljs-number">8</span>:   <span class="hljs-string">'bar'</span>
    <span class="hljs-number">9</span>: );
	</code></pre>

	<p>In these cases, when some other code contributer comes along and adds another parameter to one of these parameter lists, they must make two line updates:</p>

	<pre><code class="javascript hljs">
     <span class="hljs-number">1</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clownPuppiesEverywhere</span>(<span class="hljs-params">
     2:   param1,
     3:   param2, <span class="hljs-comment">// updated to add a comma</span>
     4:   param3  <span class="hljs-comment">// updated to add new parameter</span>
     5: </span>) </span>{ <span class="hljs-comment">/* ... */</span> }
     <span class="hljs-number">6</span>: 
     <span class="hljs-number">7</span>: clownPuppiesEverywhere(
     <span class="hljs-number">8</span>:   <span class="hljs-string">'foo'</span>,
     <span class="hljs-number">9</span>:   <span class="hljs-string">'bar'</span>, <span class="hljs-comment">// updated to add a comma</span>
    <span class="hljs-number">10</span>:   <span class="hljs-string">'baz'</span>  <span class="hljs-comment">// updated to add new parameter</span>
    <span class="hljs-number">11</span>: );
	</code></pre>

	<p>In the process of doing this change on code managed by a version control system (git, subversion, mercurial, etc), the blame/annotation code history information for lines 3 and 9 get updated to point at the person who added the comma (rather than the person who originally added the parameter).</p>
	<p>To help mitigate this problem, some other languages (Python, D, Hack, ...probably others...) have added grammar support to allow a trailing comma in these parameter lists. This allows code contributors to always end a parameter addition with a trailing comma in one of these per-line parameter lists and never have to worry about the code attribution problem again:</p>

	<pre><code class="javascript hljs">
     <span class="hljs-number">1</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clownPuppiesEverywhere</span>(<span class="hljs-params">
     2:   param1,
     3:   param2, <span class="hljs-comment">// Next parameter that's added only has to add a new line, not modify this line</span>
     5: </span>) </span>{ <span class="hljs-comment">/* ... */</span> }
     <span class="hljs-number">6</span>: 
     <span class="hljs-number">7</span>: clownPuppiesEverywhere(
     <span class="hljs-number">8</span>:   <span class="hljs-string">'foo'</span>,
     <span class="hljs-number">9</span>:   <span class="hljs-string">'bar'</span>, <span class="hljs-comment">// Next parameter that's added only has to add a new line, not modify this line</span>
    <span class="hljs-number">11</span>: );
	</code></pre>

	<p>Note that this proposal is exclusively about grammar and makes no changes to semantics, therefore the presence of a trailing comma has no effect on things like  <code class="javascript">&lt;&lt;function&gt;&gt;.length</code>.</p>

	<p><a href="https://github.com/jeffmo/es-trailing-function-commas">This repo</a> contains the original proposal slides, a version of esprima hacked to allow trailing commas in parameter lists, and a very simple CLI utility to show that it's possible (and easy) to transpile trailing commas to ES5-compatible non-trailing commas in a build step.</p>
</emu-intro>

<emu-clause id="modified-productions">
  <h1><span class="secnum">1</span>Modified Productions<span class="utils"><span class="anchor"><a href="#modified-productions">#</a></span></span></h1>

  <emu-clause id="Arguments">
    <h1><span class="secnum">1.1</span><emu-nt><a href="#prod-Arguments">Arguments</a></emu-nt><span class="utils"><span class="anchor"><a href="#Arguments">#</a></span></span></h1>

    <emu-production name="Arguments" params="Yield" id="prod-Arguments">
      <emu-nt params="Yield"><a href="#prod-Arguments">Arguments</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs><emu-t>()</emu-t></emu-rhs>
      <emu-rhs><emu-t>(</emu-t><emu-nt params="?Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>
      <ins class="block">
        <emu-rhs><emu-t>(</emu-t><emu-nt params="?Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,)</emu-t></emu-rhs>
        <emu-rhs a="Arguments--ArgumentList-AssignmentExpression"><emu-t>(</emu-t><emu-nt params="?Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-t>...</emu-t><emu-nt params="In, ?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a><emu-mods><emu-params>[In, ?Yield]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs>
      </ins>
    </emu-production>

    <emu-clause id="arguments-runtime-semantics-argumentlistevaluation">
      <h1><span class="secnum">1.1.1</span>Runtime Semantics: ArgumentListEvaluation<span class="utils"><span class="anchor"><a href="#arguments-runtime-semantics-argumentlistevaluation">#</a></span></span></h1>

      <ins class="block">
        <p><emu-production name="Arguments" params="Yield" id="prod-Arguments" a="Arguments--ArgumentList-AssignmentExpression" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-Arguments">Arguments</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="Arguments--ArgumentList-AssignmentExpression"><emu-t>(</emu-t><emu-nt params="?Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-t>...</emu-t><emu-nt params="In, ?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a><emu-mods><emu-params>[In, ?Yield]</emu-params></emu-mods></emu-nt><emu-t>)</emu-t></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>list</var> be ArgumentListEvaluation of <emu-nt><a href="#prod-ArgumentList">ArgumentList</a></emu-nt></li><li>Let <var>spreadRef</var> be the result of evaluation <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a></emu-nt></li><li>Let <var>spreadObj</var> be <a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-getvalue">GetValue</a>(<var>spreadRef</var>)</li><li>Let <var>iterator</var> be ?<a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-getiterator">GetIterator</a>(<var>spreadObj</var>)</li><li>Repeat<ol><li>Let <var>next</var> be ?<a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-iteratorstep">IteratorStep</a>(<var>iterator</var>)</li><li>If <var>next</var> is <emu-t>false</emu-t>, return <var>list</var>.</li><li>Let <var>nextArg</var> be ?<a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-iteratorvalue">IteratorValue</a>(<var>next</var>)</li><li>Append <var>nextArg</var> as the last element of <var>list</var>
        </li></ol></li></ol></emu-alg>
      </ins>
    </emu-clause>
  </emu-clause>

  <emu-clause id="ArgumentList">
    <h1><span class="secnum">1.2</span><emu-nt><a href="#prod-ArgumentList">ArgumentList</a></emu-nt><span class="utils"><span class="anchor"><a href="#ArgumentList">#</a></span></span></h1>
    
    <emu-production name="ArgumentList" params="Yield" id="prod-ArgumentList">
      <emu-nt params="Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs><emu-nt params="In, ?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a><emu-mods><emu-params>[In, ?Yield]</emu-params></emu-mods></emu-nt></emu-rhs>
      <del class="block"><emu-rhs a="ArgumentList--elipses-AssignmentExpression"><emu-t>...</emu-t><emu-nt params="In, ?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a><emu-mods><emu-params>[In, ?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></del>
      <emu-rhs><emu-nt params="?Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="In, ?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a><emu-mods><emu-params>[In, ?Yield]</emu-params></emu-mods></emu-nt></emu-rhs>
      <del class="block"><emu-rhs a="ArgumentList--ArgumentList-elipses-AssignmentExpression"><emu-nt params="?Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-t>...</emu-t><emu-nt params="In, ?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a><emu-mods><emu-params>[In, ?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></del>
    </emu-production>

    <emu-clause id="argument-list-runtime-semantics-argumentlistevaluation">
      <h1><span class="secnum">1.2.1</span>Runtime Semantics: ArgumentListEvaluation<span class="utils"><span class="anchor"><a href="#argument-list-runtime-semantics-argumentlistevaluation">#</a></span></span></h1>

      <del class="block">
        <p><emu-production name="ArgumentList" params="Yield" id="prod-ArgumentList" a="ArgumentList--elipses-AssignmentExpression" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="ArgumentList--elipses-AssignmentExpression"><emu-t>...</emu-t><emu-nt params="In, ?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a><emu-mods><emu-params>[In, ?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>list</var> be an empty <emu-xref href="#sec-list-and-record-specification-type"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-list-and-record-specification-type">List</a></emu-xref>.</li><li>Let <var>spreadRef</var> be the result of evaluation <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a></emu-nt></li><li>Let <var>spreadObj</var> be <a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-getvalue">GetValue</a>(<var>spreadRef</var>)</li><li>Let <var>iterator</var> be ?<a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-getiterator">GetIterator</a>(<var>spreadObj</var>)</li><li>Repeat<ol><li>Let <var>next</var> be ?<a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-iteratorstep">IteratorStep</a>(<var>iterator</var>)</li><li>If <var>next</var> is <emu-t>false</emu-t>, return <var>list</var>.</li><li>Let <var>nextArg</var> be ?<a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-iteratorvalue">IteratorValue</a>(<var>next</var>)</li><li>Append <var>nextArg</var> as the last element of <var>list</var>
        </li></ol></li></ol></emu-alg>
      </del>

      <del class="block">
        <p><emu-production name="ArgumentList" params="Yield" id="prod-ArgumentList" a="ArgumentList--ArgumentList-elipses-AssignmentExpression" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="ArgumentList--ArgumentList-elipses-AssignmentExpression"><emu-nt params="?Yield"><a href="#prod-ArgumentList">ArgumentList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-t>...</emu-t><emu-nt params="In, ?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a><emu-mods><emu-params>[In, ?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>precedingArgs</var> be the result of evaluating <emu-nt><a href="#prod-ArgumentList">ArgumentList</a></emu-nt>.</li><li>Let <var>spreadRef</var> be the result of evaluation <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-AssignmentExpression">AssignmentExpression</a></emu-nt></li><li>Let <var>spreadObj</var> be <a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-getvalue">GetValue</a>(<var>spreadRef</var>)</li><li>Let <var>iterator</var> be ?<a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-getiterator">GetIterator</a>(<var>spreadObj</var>)</li><li>Repeat<ol><li>Let <var>next</var> be ?<a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-iteratorstep">IteratorStep</a>(<var>iterator</var>)</li><li>If <var>next</var> is <emu-t>false</emu-t>, return <var>precedingArgs</var>.</li><li>Let <var>nextArg</var> be ?<a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-iteratorvalue">IteratorValue</a>(<var>next</var>)</li><li>Append <var>nextArg</var> as the last element of <var>list</var>
        </li></ol></li></ol></emu-alg>
      </del>
    </emu-clause>
  </emu-clause>

  <emu-clause id="FormalParameters">
    <h1><span class="secnum">1.3</span><emu-nt><a href="#prod-FormalParameters">FormalParameters</a></emu-nt><span class="utils"><span class="anchor"><a href="#FormalParameters">#</a></span></span></h1>

    <emu-production name="FormalParameters" params="Yield" id="prod-FormalParameters">
      <emu-nt params="Yield"><a href="#prod-FormalParameters">FormalParameters</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameters--empty">[empty]</emu-rhs>
      <ins class="block"><emu-rhs><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></ins>
      <emu-rhs><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs>
      <ins class="block">
      	<emu-rhs><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t></emu-rhs>
      	<emu-rhs a="FormalParameters--FormalParameterList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs>
      </ins>
    </emu-production>

    <emu-clause id="formal-parameters-static-semantics-boundnames">
      <h1><span class="secnum">1.3.1</span>Static Semantics: BoundNames<span class="utils"><span class="anchor"><a href="#formal-parameters-static-semantics-boundnames">#</a></span></span></h1>

      <ins class="block">
        <p><emu-production name="FormalParameters" params="Yield" id="prod-FormalParameters" a="FormalParameters--FormalParameterList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameters">FormalParameters</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameters--FormalParameterList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt></li><li>Append to <var>names</var> the BoundNames of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a></emu-nt></li><li>Return <var>names</var>
        </li></ol></emu-alg>
      </ins>
    </emu-clause>

    <emu-clause id="formal-parameters-static-semantics-containsexpression">
      <h1><span class="secnum">1.3.2</span>Static Semantics: ContainsExpression<span class="utils"><span class="anchor"><a href="#formal-parameters-static-semantics-containsexpression">#</a></span></span></h1>

      <ins class="block">
        <p><emu-production name="FormalParameters" params="Yield" id="prod-FormalParameters" a="FormalParameters--FormalParameterList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameters">FormalParameters</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameters--FormalParameterList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Return ContainsExpression of <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt>
        </li></ol></emu-alg>
      </ins>
    </emu-clause>

    <emu-clause id="formal-parameters-static-semantics-expectedargumentcount">
      <h1><span class="secnum">1.3.3</span>Static Semantics: ExpectedArgumentCount<span class="utils"><span class="anchor"><a href="#formal-parameters-static-semantics-expectedargumentcount">#</a></span></span></h1>

      <ins class="block">
        <p><emu-production name="FormalParameters" params="Yield" id="prod-FormalParameters" a="FormalParameters--FormalParameterList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameters">FormalParameters</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameters--FormalParameterList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Return ExpectedArgumentCount of <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt>
        </li></ol></emu-alg>
      </ins>
    </emu-clause>

    <emu-clause id="formal-parameters-static-semantics-issimpleparameterlist">
      <h1><span class="secnum">1.3.4</span>Static Semantics: IsSimpleParameterList<span class="utils"><span class="anchor"><a href="#formal-parameters-static-semantics-issimpleparameterlist">#</a></span></span></h1>

      <ins class="block">
        <p><emu-production name="FormalParameters" params="Yield" id="prod-FormalParameters" a="FormalParameters--FormalParameterList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameters">FormalParameters</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameters--FormalParameterList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Return <emu-val>false</emu-val>
        </li></ol></emu-alg>
      </ins>
    </emu-clause>

    <emu-clause id="formal-parameters-runtime-semantics-iteratorbindinginitialization">
      <h1><span class="secnum">1.3.5</span>Runtime Semantics: IteratorBindingInitialization<span class="utils"><span class="anchor"><a href="#formal-parameters-runtime-semantics-iteratorbindinginitialization">#</a></span></span></h1>

      <ins class="block">
        <p><emu-production name="FormalParameters" params="Yield" id="prod-FormalParameters" a="FormalParameters--FormalParameterList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameters">FormalParameters</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameters--FormalParameterList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>restIndex</var> be the result of performing IteratorBindingInitialization for <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt> using <var>iteratorRecord</var> and <var>environment</var> as the arguments.</li><li><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-returnifabrupt">ReturnIfAbrupt</a>(<var>restIndex</var>).</li><li>Return the result of performing IteratorBindingInitialization for <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a></emu-nt> using <var>iteratorRecord</var> and <var>environment</var> as the arguments.
        </li></ol></emu-alg>
      </ins>
    </emu-clause>
  </emu-clause>

  <emu-clause id="FormalParameterList">
    <h1><span class="secnum">1.4</span><emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt><span class="utils"><span class="anchor"><a href="#FormalParameterList">#</a></span></span></h1>

    <emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs><emu-t>TODO:</emu-t><emu-t>Remove</emu-t><emu-t>me</emu-t><emu-t>after</emu-t><emu-t>bugfix</emu-t><emu-t>for</emu-t><emu-t>del/first-emu-rhs</emu-t><emu-t>issue</emu-t></emu-rhs>
      <del class="block"><emu-rhs a="FormalParameterList--FunctionRestParameter"><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></del>
      <del class="block"><emu-rhs><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></del>
      <del class="block"><emu-rhs a="FormalParameterList--FormalsList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></del>
      <ins class="block">
      	<emu-rhs><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs>
      	<emu-rhs a="FormalParameterList--FormalParameterList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs>
      </ins>
    </emu-production>

    <emu-clause id="FormalParameterList--static-semantics-boundnames">
      <h1><span class="secnum">1.4.1</span>Static Semantics: BoundNames<span class="utils"><span class="anchor"><a href="#FormalParameterList--static-semantics-boundnames">#</a></span></span></h1>

      <del class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalsList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalsList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt>.</li><li>Append to <var>names</var> th eBoundNames of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a></emu-nt>.</li><li>Return <var>names</var>.
        </li></ol></emu-alg>
      </del>

      <ins class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalParameterList-FormalParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalParameterList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt>.</li><li>Append to <var>names</var> the BoundNames of FormalParameter.</li><li>Return <var>names</var>.
        </li></ol></emu-alg>
      </ins>
    </emu-clause>

    <emu-clause id="FormalParameterList--static-semantics-containsexpression">
      <h1><span class="secnum">1.4.2</span>Static Semantics: ContainsExpression<span class="utils"><span class="anchor"><a href="#FormalParameterList--static-semantics-containsexpression">#</a></span></span></h1>

      <del class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FunctionRestParameter"><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Return <emu-t>true</emu-t>.
        </li></ol></emu-alg>
      </del>

      <del class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalsList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalsList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Return ContainsExpression of <emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt>.
        </li></ol></emu-alg>
      </del>

      <ins class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalParameterList-FormalParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalParameterList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>If ContainsExpression of <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt> is <emu-t>true</emu-t>, return <emu-t>true</emu-t>.</li><li>Return ContainsExpression of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt>.
        </li></ol></emu-alg>
      </ins>
    </emu-clause>

    <emu-clause id="FormalParameterList--static-semantics-expectedargumentcount">
      <h1><span class="secnum">1.4.3</span>Static Semantics: ExpectedArgumentCount<span class="utils"><span class="anchor"><a href="#FormalParameterList--static-semantics-expectedargumentcount">#</a></span></span></h1>

      <del class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FunctionRestParameter"><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Return <emu-t>0</emu-t>.
        </li></ol></emu-alg>
      </del>

      <del class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalsList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalsList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Return the ExpectedArgumentCount of <emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt>.
          <emu-note><span class="note">Note</span>
            The ExpectedArgumentCount of a <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt> is the number of <emu-nt><a href="#prod-FormalParameters">FormalParameters</a></emu-nt> to the left of either the rest parameter or the first <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt> with an Initializer. A <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt> without an initializer is allowed after the first parameter with an initializer but such parameters are considered to be optional with <emu-t>undefined</emu-t> as their default value.
          </emu-note>
        </li></ol></emu-alg>
      </del>

      <ins class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalParameterList-FormalParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalParameterList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>count</var> be ExpectedArgumentCount of <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt>.</li><li>If HasInitializer of <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt> is <emu-t>true</emu-t> or HasInitializer of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt> is <emu-t>true</emu-t>, return <var>count</var>.</li><li>Return <var>count</var>+1.
        </li></ol></emu-alg>
      </ins>
    </emu-clause>

    <emu-clause id="FormalParameterList--static-semantics-hasinitializer">
      <h1><span class="secnum">1.4.4</span>Static Semantics: HasInitializer<span class="utils"><span class="anchor"><a href="#FormalParameterList--static-semantics-hasinitializer">#</a></span></span></h1>

      <ins class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalParameterList-FormalParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalParameterList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>If HasInitializer of <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt> is <emu-t>true</emu-t>, return <emu-t>true</emu-t>.</li><li>Return HasInitializer of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt>.
        </li></ol></emu-alg>
      </ins>
    </emu-clause>

    <emu-clause id="FormalParameterList--static-semantics-issimpleparameterlist">
      <h1><span class="secnum">1.4.5</span>Static Semantics: IsSimpleParameterList<span class="utils"><span class="anchor"><a href="#FormalParameterList--static-semantics-issimpleparameterlist">#</a></span></span></h1>

      <del class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FunctionRestParameter"><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Return <emu-t>false</emu-t>.
        </li></ol></emu-alg>
      </del>

      <del class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalsList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalsList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Return <emu-t>false</emu-t>.
        </li></ol></emu-alg>
      </del>

      <ins class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalParameterList-FormalParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalParameterList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>If IsSimpleParameterList of <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt> is <emu-t>false</emu-t>, return false.</li><li>Return IsSimpleParameterList of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt>.
        </li></ol></emu-alg>
      </ins>
    </emu-clause>

    <emu-clause id="FormalParameterList--runtime-semantics-iteratorbindinginitialization">
      <h1><span class="secnum">1.4.6</span>Runtime Semantics: IteratorBindingInitialization<span class="utils"><span class="anchor"><a href="#FormalParameterList--runtime-semantics-iteratorbindinginitialization">#</a></span></span></h1>

      <del class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalsList-FunctionRestParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalsList-FunctionRestParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>restIndex</var> be the result of performing IteratorBindingInitialization for <emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt> using <var>iteratorRecord</var>, and <var>environment</var> as the arguments.</li><li><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-returnifabrupt">ReturnIfAbrupt</a>(<var>restIndex</var>).</li><li>Return the result of performing IteratorBindingInitialization for <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FunctionRestParameter">FunctionRestParameter</a></emu-nt> using <var>iteratorRecord</var> and <var>environment</var> as the arguments.
        </li></ol></emu-alg>
      </del>

      <ins class="block">
        <p><emu-production name="FormalParameterList" params="Yield" id="prod-FormalParameterList" a="FormalParameterList--FormalParameterList-FormalParameter" class="inline" collapsed="">
      <emu-nt params="Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalParameterList--FormalParameterList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalParameterList">FormalParameterList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>restIndex</var> be the result of performing IteratorBindingInitialization for <emu-nt><a href="#prod-FormalParameterList">FormalParameterList</a></emu-nt> using <var>iteratorRecord</var>, and <var>environment</var> as the arguments.</li><li><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#sec-returnifabrupt">ReturnIfAbrupt</a>(<var>restIndex</var>).</li><li>Return the result of performing IteratorBindingInitialization for <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt> using <var>iteratorRecord</var> and <var>environment</var> as the arguments.
        </li></ol></emu-alg>
      </ins>
    </emu-clause>
  </emu-clause>

  <emu-clause id="FormalsList">
    <h1><span class="secnum">1.5</span><emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt><span class="utils"><span class="anchor"><a href="#FormalsList">#</a></span></span></h1>
    <p>The  <emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt> production is removed.</p>

    <del class="block">
      <emu-production name="FormalsList" params="Yield" id="prod-FormalsList" class=" inline">
        <!-- TODO: We have inner-<del>s here because it solves some strange nesting issues with del and emu-production -->
        <emu-nt params="Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs><emu-t>TODO:</emu-t><emu-t>Remove</emu-t><emu-t>me</emu-t><emu-t>after</emu-t><emu-t>bugfix</emu-t><emu-t>for</emu-t><emu-t>del/first-emu-rhs</emu-t><emu-t>issue</emu-t></emu-rhs>
        <del class="block"><emu-rhs a="FormalsList--FormalParameter"><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></del>
        <del class="block"><emu-rhs a="FormalsList--FormalsList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></del>
      </emu-production>
    </del>

    <emu-clause id="FormalsList--static-semantics-boundnames">
      <h1><span class="secnum">1.5.1</span>Static Semantics: BoundNames<span class="utils"><span class="anchor"><a href="#FormalsList--static-semantics-boundnames">#</a></span></span></h1>

      <del class="block">
        <p><emu-production name="FormalsList" params="Yield" id="prod-FormalsList" class=" inline" a="FormalsList--FormalsList-FormalParameter" collapsed="">
        <!-- TODO: We have inner-<del>s here because it solves some strange nesting issues with del and emu-production -->
        <emu-nt params="Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalsList--FormalsList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>names</var> be BoundNames of <emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt>.</li><li>Append to <var>names</var> the BoundNames of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt>.</li><li>Return <var>names</var>.
        </li></ol></emu-alg>
      </del>
    </emu-clause>

    <emu-clause id="FormalsList--static-semantics-containsexpression">
      <h1><span class="secnum">1.5.2</span>Static Semantics: ContainsExpression<span class="utils"><span class="anchor"><a href="#FormalsList--static-semantics-containsexpression">#</a></span></span></h1>

      <del class="block">
        <p><emu-production name="FormalsList" params="Yield" id="prod-FormalsList" class=" inline" a="FormalsList--FormalsList-FormalParameter" collapsed="">
        <!-- TODO: We have inner-<del>s here because it solves some strange nesting issues with del and emu-production -->
        <emu-nt params="Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalsList--FormalsList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>If ContainsExpression of <emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt> is <emu-t>true</emu-t>, return <emu-t>true</emu-t>.</li><li>Return ContainsExpression of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt>.
        </li></ol></emu-alg>
      </del>
    </emu-clause>

    <emu-clause id="FormalsList--static-semantics-expectedargumentcount">
      <h1><span class="secnum">1.5.3</span>Static Semantics: ExpectedArgumentCount<span class="utils"><span class="anchor"><a href="#FormalsList--static-semantics-expectedargumentcount">#</a></span></span></h1>

      <del class="block">
        <p><emu-production name="FormalsList" params="Yield" id="prod-FormalsList" class=" inline" a="FormalsList--FormalParameter" collapsed="">
        <!-- TODO: We have inner-<del>s here because it solves some strange nesting issues with del and emu-production -->
        <emu-nt params="Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalsList--FormalParameter"><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>If HasInitializer of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt> is <emu-t>true</emu-t>, return <emu-t>0</emu-t>.</li><li>Return <emu-t>1</emu-t>.
        </li></ol></emu-alg>
      </del>

      <del class="block">
        <p><emu-production name="FormalsList" params="Yield" id="prod-FormalsList" class=" inline" a="FormalsList--FormalsList-FormalParameter" collapsed="">
        <!-- TODO: We have inner-<del>s here because it solves some strange nesting issues with del and emu-production -->
        <emu-nt params="Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[Yield]</emu-params></emu-mods></emu-nt><emu-geq>:</emu-geq><emu-rhs a="FormalsList--FormalsList-FormalParameter"><emu-nt params="?Yield"><a href="#prod-FormalsList">FormalsList</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt><emu-t>,</emu-t><emu-nt params="?Yield"><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a><emu-mods><emu-params>[?Yield]</emu-params></emu-mods></emu-nt></emu-rhs></emu-production></p>
        <emu-alg><ol><li>Let <var>count</var> be the ExpectedArgumentCount of <emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt>.</li><li>If HasInitializer of <emu-nt><a href="#prod-FormalsList">FormalsList</a></emu-nt> is <emu-t>true</emu-t> or HasInitializer of <emu-nt><a href="http://www.ecma-international.org/ecma-262/6.0/index.html#prod-FormalParameter">FormalParameter</a></emu-nt> is <emu-t>true</emu-t>, return <var>count</var>.</li><li>Return <var>count</var>+<emu-t>1</emu-t>.
        </li></ol></emu-alg>
      </del>
    </emu-clause>
  </emu-clause>
</emu-clause><emu-annex id="sec-copyright-and-software-license">
      <h1><span class="secnum">A</span>Copyright &amp; Software License<span class="utils"><span class="anchor"><a href="#sec-copyright-and-software-license">#</a></span></span></h1>
      
      <h2>Copyright Notice</h2>
      <p>© 2015 Jeff Morrison</p>

      <h2>Software License</h2>
      <p>All Software contained in this document ("Software") is protected by copyright and is being made available under the "BSD License", included below. This Software may be subject to third party rights (rights from parties other than Ecma International), including patent rights, and no licenses under such third party rights are granted under this license even if the third party concerned is a member of Ecma International. SEE THE ECMA CODE OF CONDUCT IN PATENT MATTERS AVAILABLE AT http://www.ecma-international.org/memento/codeofconduct.htm FOR INFORMATION REGARDING THE LICENSING OF PATENT CLAIMS THAT ARE REQUIRED TO IMPLEMENT ECMA INTERNATIONAL STANDARDS.</p>

<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>

<ol>
  <li>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</li>
  <li>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</li>
  <li>Neither the name of the authors nor Ecma International may be used to endorse or promote products derived from this software without specific prior written permission.</li>
</ol>

<p>THIS SOFTWARE IS PROVIDED BY THE ECMA INTERNATIONAL "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ECMA INTERNATIONAL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>

    </emu-annex>

</body>